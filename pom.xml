<?xml version="1.0" encoding="UTF-8"?>
<!-- File managed by WebFX (DO NOT EDIT MANUALLY) -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>dev.webfx</groupId>
        <artifactId>webfx-stack-parent</artifactId>
        <version>0.1.0-SNAPSHOT</version>
    </parent>

    <artifactId>mongoose</artifactId>

    <version>1.0.0-SNAPSHOT</version>

    <repositories>

        <!-- For WebFX snapshots download (including webfx-parent) -->
        <repository>
            <id>webfx-snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>

    </repositories>

    <packaging>pom</packaging>

    <modules>
        <module>mongoose-all</module>
        <module>mongoose-base</module>
        <module>mongoose-catering</module>
        <module>mongoose-crm</module>
        <module>mongoose-ecommerce</module>
        <module>mongoose-event</module>
        <module>mongoose-hotel</module>
        <module>mongoose-restaurant</module>
        <module>mongoose-shop</module>
    </modules>

    <build>
        <plugins>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.39.1</version>

                <configuration>
                    <images>
                        <image>
                            <alias>mongoose</alias>
                            <name>fabric8/compose-demo:latest</name>
                            <external>
                                <type>compose</type>
                                <basedir>C:\Users\andre\code\mongoose</basedir>
                                <composeFile>docker-compose.yml</composeFile>
                            </external>
                        </image>
                    </images>
                </configuration>

                <!-- Connect start/stop to pre- and
                     post-integration-test phase, respectively if you want to start
                     your docker containers during integration tests -->
                <executions>
                    <execution>
                        <id>start</id>
                        <inherited>false</inherited>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <!-- "build" should be used to create the images with the
                                 artifact -->
                            <goal>build</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <inherited>false</inherited>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>